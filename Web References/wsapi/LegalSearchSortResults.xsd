<?xml version="1.0" encoding="utf-8"?>
<schema xmlns:tns="http://legalsearchsortresults.resultsorting.services.v1.wsapi.lexisnexis.com" xmlns:security="http://security.common.services.v1.wsapi.lexisnexis.com" xmlns:result="http://result.common.services.v1.wsapi.lexisnexis.com" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://legalsearchsortresults.resultsorting.services.v1.wsapi.lexisnexis.com" version="1.0" xmlns="http://www.w3.org/2001/XMLSchema">
  <import schemaLocation="Result.xsd" namespace="http://result.common.services.v1.wsapi.lexisnexis.com" />
  <import schemaLocation="Security.xsd" namespace="http://security.common.services.v1.wsapi.lexisnexis.com" />
  <element name="LegalSearchSortResults" type="tns:LegalSearchSortResults">
    <annotation>
      <documentation>Allows you to sort the results following a successful search.</documentation>
    </annotation>
  </element>
  <element name="LegalSearchSortResultsResponse" type="tns:LegalSearchSortResultsResponse">
    <annotation>
      <documentation>The response from sorting the results.  A new searchId is returned.</documentation>
    </annotation>
  </element>
  <complexType name="LegalSearchSortResults">
    <sequence>
      <element name="binarySecurityToken" type="security:BinarySecurityToken">
        <annotation>
          <documentation>
            <example xmlns="http://www.w3.org/2001/XMLSchema">f4348ad8876542bc93748c89fb98a7e</example>Security token that must be provided on all non-authentication requests.</documentation>
        </annotation>
      </element>
      <element name="searchId" type="string">
        <annotation>
          <documentation>
            <example xmlns="http://www.w3.org/2001/XMLSchema">ef5bafbd11</example>Unique identifier that maintains all pertinent information
                        from the original search.</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="sortOrder" type="tns:LegalSearchSortOrder">
        <annotation>
          <documentation>
            <example xmlns="http://www.w3.org/2001/XMLSchema">Implied</example>Strategy used to sort the results..  Implied 
             indicates that the sort order is chosen to best fit the search 
             method employed and the type of content that is returned.</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="sortStrategyList" type="tns:LegalSearchSortStrategyList">
        <annotation>
          <documentation>A list of sortId values by which the results will be sorted.
						The sort orders will be applied in the order specified.</documentation>
        </annotation>
      </element>
      <element minOccurs="0" name="retrievalOptions" type="result:RetrievalOptions">
        <annotation>
          <documentation>If present, this structure contains details about how retrieved
						documents are to be presented.  Also includes the range of documents
						to return.  If absent, no documents will be returned.</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="LegalSearchSortStrategyList">
    <sequence>
      <element minOccurs="0" maxOccurs="unbounded" name="sortStrategy" type="tns:LegalSearchSortStrategy">
        <annotation>
          <documentation>A sort strategy that will determine one sort order which will
						be applied to the current results.</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="LegalSearchSortStrategy">
    <sequence>
      <element name="sortId" type="string">
        <annotation>
          <documentation>A sort strategy that will determine one sort order which will
						be applied to the current results.</documentation>
        </annotation>
      </element>
      <element minOccurs="0" default="Ascending" name="sortDirection" type="tns:LegalSearchSortDirection">
        <annotation>
          <documentation>The sort order that the results will be sorted for this 
						sortId, either ascending or descending.</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <simpleType name="LegalSearchSortDirection">
    <restriction base="string">
      <enumeration value="Ascending" />
      <enumeration value="Descending" />
    </restriction>
  </simpleType>
  <complexType name="LegalSearchSortResultsResponse">
    <complexContent mixed="false">
      <extension base="result:RetrievalResponse">
        <sequence>
          <element name="searchId" type="string">
            <annotation>
              <documentation>
                <example xmlns="http://www.w3.org/2001/XMLSchema">ef5bafbd11</example>Unique identifier that maintains all pertinent information
                  				from the original search.</documentation>
            </annotation>
          </element>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <simpleType name="LegalSearchSortOrder">
    <restriction base="string">
      <enumeration value="SourceOrder" />
      <enumeration value="Relevance" />
    </restriction>
  </simpleType>
</schema>